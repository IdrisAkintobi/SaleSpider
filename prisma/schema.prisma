// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id          @default(cuid()) 
  email    String   @unique
  username String   @unique
  name     String
  password String
  role     Role
  status   UserStatus @default(ACTIVE)
  sales    Sale[]    @relation("CashierSales")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

enum Role {
  SUPER_ADMIN
  MANAGER
  CASHIER
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model Product {
  id             String   @id          @default(cuid()) // Unique identifier, default is cuid for auto-generation
  name           String   @unique
  description    String
  category       ProductCategory
  price          Float
  quantity       Int
  lowStockMargin Int
  imageUrl       String?
  gtin           String?  @unique // Optional field for GTIN (Global Trade Item Number)
  saleItems      SaleItem[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

enum ProductCategory {
  FOOD_AND_BEVERAGES
  HOUSEHOLD_ITEMS
  HEALTH_AND_BEAUTY
  CLOTHING_AND_APPAREL
  ELECTRONICS
  TOYS_AND_GAMES
  OFFICE_SUPPLIES
  PET_SUPPLIES
  AUTOMOTIVE
  BOOKS_AND_STATIONERY
  SEASONAL_AND_SPECIAL_OCCASIONS
  BABY_PRODUCTS
  SPORTS_AND_OUTDOORS
  MEDIA
  OFFICE_AND_SCHOOL_SUPPLIES
  GARDENING_AND_TOOLS
  JEWELRY_AND_WATCHES
  HEALTH_AND_FITNESS
  OTHERS
}

enum PaymentMode {
  CASH
  CARD
  BANK_TRANSFER
  CRYPTO
  OTHER
}

model Sale {
  id           String       @id @default(cuid())
  cashierId    String
  cashier      User         @relation("CashierSales", fields: [cashierId], references: [id])
  subtotal     Float        // Amount before VAT
  vatAmount    Float        // VAT amount applied
  vatPercentage Float       // VAT percentage used (stored for record keeping)
  totalAmount  Float        // Total amount including VAT
  paymentMode  PaymentMode
  items        SaleItem[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  deletedAt    DateTime?
}

model SaleItem {
  id        String  @id @default(cuid())
  saleId    String
  sale      Sale    @relation(fields: [saleId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float   // Price at the time of sale
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AppSettings {
  id                String   @id @default(cuid())
  appName           String   @default("SaleSpider")
  appLogo           String?  // URL to logo image
  primaryColor      String   @default("#0f172a") // Default dark blue
  secondaryColor    String   @default("#3b82f6") // Default blue
  accentColor       String   @default("#f59e0b") // Default amber
  currency          String   @default("NGN") // Nigerian Naira
  currencySymbol    String   @default("â‚¦")
  vatPercentage     Float    @default(7.5) // Default VAT percentage
  timezone          String   @default("Africa/Lagos")
  dateFormat        String   @default("dd/MM/yyyy")
  timeFormat        String   @default("HH:mm")
  language          String   @default("en")
  theme             String   @default("light") // light, dark, auto
  maintenanceMode   Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
