name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [24.x]

    services:
      postgres:
        image: postgres:16
        env:
          # These are ephemeral test credentials - destroyed after each CI run
          # Never use production credentials in CI workflows
          POSTGRES_PASSWORD: ${{ secrets.CI_POSTGRES_PASSWORD || 'test_postgres_ci_only' }}
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test environment
        run: |
          cp env.example .env
          # CI-only test credentials - never use production secrets here
          echo "DATABASE_URL=postgresql://postgres:${{ secrets.CI_POSTGRES_PASSWORD || 'test_postgres_ci_only' }}@localhost:5432/test_db" >> .env
          echo "JWT_SECRET=${{ secrets.CI_JWT_SECRET || 'test-jwt-secret-ci' }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.CI_NEXTAUTH_SECRET || 'test-nextauth-secret-ci' }}" >> .env

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma db push

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level high

      - name: Check for vulnerabilities
        run: npx audit-ci --config ./audit-ci.json
        continue-on-error: true
